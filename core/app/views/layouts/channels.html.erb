<% content_for :header do %>
<% end %>

<% content_for :left_column do %>
  <%= render "channels/channels", user: @user %>
<% end %>

<% content_for :left_column do %>
  <div class="related-users">
    <%= render("channels/related_users",
                 :related_users => @channel.related_users(:without=>[current_graph_user]).andand.map{|x| x.user },
                 :excluded_users => [@channel.andand.created_by.andand.user])
               %>
  </div>
  <% if false and @channel and not @channel.new? %>
    <div id="activity-listing">
      <%= render "channels/activity_list", channel: @channel %>
    </div>
  <% end %>
<% end %>

<% content_for :javascript do %>
  <script>
    Channels.reset(<%= @user.graph_user.channels.map{|ch| Channels::SingleMenuItem.for(channel: ch,view: self,channel_user: @user) }.to_json.html_safe %>);

    <% if @channel && !@channel.new? %>
      window.currentChannel = Channels.get(<%= @channel.id %>);
    <% end %>

    <% if current_user %>
      window.currentUser = new User(<%= Users::User.for(user: current_user, view: self).to_json.html_safe %>);

      window.currentUser.setChannels(new OwnChannelCollection(<%= current_graph_user.channels.map{|ch| Channels::SingleMenuItem.for(channel: ch,view: self) }.to_json.html_safe %>));
    <% end %>

    var Router = new Workspace();

    Backbone.history.start({pushState:true, silent:true});
    Router.navigate(window.location.pathname);

  </script>
<% end %>

<%= render :template => 'layouts/frontend' %>
